generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  password  String
  birthday  DateTime
  votes     Vote[]   // Added this line to establish the relationship
}

model Vote {
  id        String    @default(uuid()) @id
  userId    String
  candidateId String
  electionId String
  timestamp DateTime @default(now())

  user      User @relation(fields: [userId], references: [id])
  candidate Candidate @relation(fields: [candidateId], references: [id])
  election  Election @relation(fields: [electionId], references: [id])
}

model Election {
  id          String     @default(uuid()) @id
  title       String
  description String
  startDate   DateTime
  endDate     DateTime
  votes       Vote[]
  results     Result[]
  electionCandidates ElectionCandidate[]
}

model Result {
  id          String     @default(uuid()) @id
  electionId  String
  candidateId String
  votesCount  Int
  createdAt   DateTime @default(now())

  election    Election @relation(fields: [electionId], references: [id])
  candidate   Candidate @relation(fields: [candidateId], references: [id])
}

model Candidate {
  id        String    @default(uuid()) @id
  name      String
  party     String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  votes     Vote[]
  results   Result[]
  electionCandidates ElectionCandidate[]
}

model ElectionCandidate {
  electionId String
  candidateId String
  createdAt DateTime @default(now())

  election  Election @relation(fields: [electionId], references: [id])
  candidate Candidate @relation(fields: [candidateId], references: [id])

  @@id([electionId, candidateId])
}
